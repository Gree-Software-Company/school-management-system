generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Admin {
  id       Int    @id @default(autoincrement())
  fees     Float?
  email    String @unique
  password String
}

model TeachingStaff {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  profile   Profile?  @relation(fields: [profileId], references: [id])
  profileId Int?      @unique
  classes   Class[]   @relation("TeachingStaffClasses")
  subjects Subject[]  
}

model Subject {
  id Int                @id @default(autoincrement())
  name String           @unique
  dateAdded DateTime    @default(now())
  teacherId Int?         @unique
  teacher TeachingStaff? @relation(fields: [teacherId], references: [id])
  marks   Marks[]
}

model NoneTeachingStaff {
  id        Int      @id @default(autoincrement())
  role      String
  email     String    @unique
  profile   Profile?  @relation(fields: [profileId], references: [id])
  profileId Int?      @unique
}

model Class {
  id          Int             @id @default(autoincrement())
  name        String
  teacher     TeachingStaff?  @relation("TeachingStaffClasses", fields: [teacherId], references: [id])
  teacherId   Int?
  students    Student[]       
}

model Student {
  id          Int       @id @default(autoincrement())
  firstName   String
  lastName    String
  classId     Int       @unique 
  class       Class     @relation(fields: [classId], references: [id])
  marks       Marks[]
  profile     StudentProfile?
  dateJoined  DateTime @default(now())
}

model StudentProfile {
  id  Int @id @default(autoincrement())
  fatherName String
  motherName String
  parentContact String
  parentAltContact String?
  dateOfBirth   DateTime
  imageUrl String?
  studentId   Int @unique
  student Student @relation(fields: [studentId], references: [id])
}

model Profile {
  id              Int               @id @default(autoincrement())
  imageUrl        String?
  firstName       String
  lastName        String
  qulifications   String?
  TeachingStaff   TeachingStaff?
  NoneTeachingStaff NoneTeachingStaff?

}

model Marks {
  id Int @id @default(autoincrement())
  semester Int
  score    Float
  studentId Int
  subjectId  Int
  addedDate DateTime @default(now())
  student Student @relation(fields: [studentId], references: [id])
  subject Subject @relation(fields: [subjectId], references: [id])
}

model Fees {
  id Int @id @default(autoincrement())
  academicYear String
  amount Float
}